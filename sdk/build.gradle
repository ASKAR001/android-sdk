plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'org.jetbrains.dokka'
    id 'maven'
    id 'signing'
}
apply plugin: 'maven-publish'
group = 'com.github.mindbox-moscow'
apply plugin: 'com.github.dcendents.android-maven'


android {
    compileSdkVersion 31
    buildToolsVersion "29.0.3"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 31
        versionCode 1
        multiDexEnabled true
        versionName '"' + SDK_VERSION_NAME + '"'

        buildConfigField 'String', 'VERSION_NAME', '"' + SDK_VERSION_NAME + '"'

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    dokka {
        outputFormat = 'javadoc'
        outputDirectory = "$buildDir/dokka"
    }
    task androidSourcesJar(type: Jar) {
        archiveClassifier.set('sources')
        from android.sourceSets.main.java.srcDirs
    }

    afterEvaluate {
        publishing {
            publications {
                release(MavenPublication) {
                    from components.release
                    artifact androidSourcesJar
                    groupId = 'cloud.mindbox'
                    artifactId = 'mobile-sdk'
                    version = SDK_VERSION_NAME
                    pom {
                        name = 'Mindbox Android SDK'
                        description = 'Test release'
                        url = 'https://github.com/mindbox-moscow/android-sdk'
                        licenses {
                            license {
                                name = 'The Mindbox License'
                                url = 'https://github.com/mindbox-moscow/android-sdk/blob/master/LICENSE.md'
                            }
                        }
                        developers {
                            developer {
                                id = 'mindbox'
                                name = 'Petr Nikitin'
                                email = 'nikitin@mindbox.ru'
                            }
                        }
                        scm {
                            connection = 'scm:https://github.com/mindbox-moscow/android-sdk.git'
                            developerConnection = 'scm:git://github.com/mindbox-moscow/android-sdk.git'
                            url = 'https://github.com/mindbox-moscow/android-sdk'
                        }
                    }
                }
            }
            repositories {
                if (!project.hasProperty("sonatypeUsername")) {
                    ext.sonatypeUsername = "sonatypeUsername"
                }
                if (!project.hasProperty("sonatypePassword")) {
                    ext.sonatypePassword = "sonatypePassword"
                }
                maven {
                    name = "OSSRH"
                    url = uri("https://oss.sonatype.org/service/local/staging/deploy/maven2")
                    credentials {
                        username = sonatypeUsername
                        password = sonatypePassword
                    }
                }
            }
        }
        signing {
            sign publishing.publications.release
        }
    }
}
dependencies {

    implementation sdkDependencies.kotlin_stdlib
    implementation sdkDependencies.androidx_core_ktx
    testImplementation testDependencies.junit
    androidTestImplementation testDependencies.androidx_junit
    androidTestImplementation testDependencies.espresso

    // Firebase messaging
    implementation platform(sdkDependencies.firebase_bom)
    implementation sdkDependencies.firebase_messaging
    implementation sdkDependencies.gms_play_services_basement

    // Ads
    implementation sdkDependencies.gms_play_services_ads_identifier

    // coroutines
    implementation sdkDependencies.kotlinx_coroutines_core
    implementation sdkDependencies.kotlinx_coroutines_android

    //network
    implementation sdkDependencies.volley
    implementation sdkDependencies.gson

    // DB
    implementation sdkDependencies.room
    kapt sdkDependencies.room_compiler

    //work manager
    implementation sdkDependencies.work_manager

    // Handle app lifecycle
    implementation sdkDependencies.androidx_lifecycle

}